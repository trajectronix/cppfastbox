target("platform_ct")
    set_default(false)
    set_kind("object")
    add_files("platform_ct.cpp")
    add_tests("unit_test", {build_should_pass = true, group = "unit_test"})
target_end()
target("platform_ct_non128")
    set_default(false)
    set_kind("object")
    add_files("platform_ct_non128.cpp")
    add_tests("unit_test", {build_should_pass = true, group = "unit_test"})
target_end()
target("utility_ct")
    set_default(false)
    set_kind("object")
    add_files("utility_ct.cpp")
    add_tests("unit_test", {build_should_pass = true, group = "unit_test"})
target_end()
target("min_max_ct")
    set_default(false)
    set_kind("object")
    add_files("min_max_ct.cpp")
    add_tests("unit_test", {build_should_pass = true, group = "unit_test"})
target_end()
target("constexpr_assert_fail_ct")
    set_default(false)
    set_kind("object")
    add_files("constexpr_assert_fail_ct.cpp")
    add_tests("unit_test", {build_should_fail = true, group = "unit_test"})
target_end()
target("constexpr_assert_pass_ct")
    set_default(false)
    set_kind("object")
    add_files("constexpr_assert_pass_ct.cpp")
    add_tests("unit_test", {build_should_pass = true, group = "unit_test"})
target_end()

target("base_uint_test")
    set_default(false)
    set_kind("phony")
    add_deps("platform_ct", "platform_ct_non128", "utility_ct", "min_max_ct", "constexpr_assert_fail_ct", "constexpr_assert_pass_ct")
target_end()
